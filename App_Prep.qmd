---
title: "App Prep"
format: html
editor: visual
---

## Mobile Device Usage and User Behavior Dataset

Read in the dataset.

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(janitor)
library(ggplot2)

mobile_usage <- read_csv("user_behavior_dataset.csv")
head(mobile_usage)

# Fix variable names 
mobile_usage <- clean_names(mobile_usage, "snake")
```

```{r}
# Checking structure to confirm variables read in correctly
str(mobile_usage)
```

```{r}
# Converting categorical variables into factor variables
mobile_usage <- mobile_usage |>
  mutate(behavior_classF = as.factor(user_behavior_class),
         device_modelF = as.factor(device_model),
         operating_systemF = as.factor(operating_system),
         user_id = as.character(user_id),
         user_behavior_class = as.character(user_behavior_class))

```

```{r}
# Checking for rate of missing values
colSums(is.na(mobile_usage))
```

No missing values in the dataset!

## Investigating the Data

### Categorical Variables

```{r}
# One-way contingency table for Operating System
table(mobile_usage$operating_systemF)
```

There are a lot more Android users than iPhone users!

```{r}
# One-way contingency table for Device Models
table(mobile_usage$device_modelF)
```

The number of users for each device model is fairly even between models. However, OnePlus 9 and Samsung Galaxy S21 have the lowest number of users.

```{r}
# Two-way contingency table of User Behavior Class by Gender
mobile_usage |>
  group_by(gender, behavior_classF) |>
  summarize(count = n()) |>
  pivot_wider(names_from = behavior_classF, values_from = count)
```

User behavior classes are from 1 to 5, ranging from light (1) to extreme usage (5). There are more males considered as extreme usage than females. Females have the greatest number of users in the mid-usage range. Although males have a greater number of extreme usage users than females, the greatest number of male users are at a mid-low usage.

```{r}
# Two-way contingency table of Device Models by Gender
table(mobile_usage$gender, mobile_usage$device_modelF)
```

The greatest number of male users have a Samsung Galaxy, which is the least popular among females.

```{r}
table(mobile_usage$gender, mobile_usage$operating_systemF)
```

The number of males vs females per operating system is close in numbers. There are more male Android users, however there are more male users than female users (in general) in this dataset.

### Numeric Variables

The following is to view measures of center and spread by gender for App Usage Time, Screen Time, and Data Usage. 
```{r}
mobile_usage |>
  group_by(gender) |>
  summarize(across(.cols = c(app_usage_time_min_day, 
                             screen_on_time_hours_day, 
                             data_usage_mb_day),
                   .fns = list("mean" = mean, 
                               "median" = median, 
                               "sd" = sd),
                   .names = "{.fn}_{.col}"))
```

The following is to view measures of center and spread by Gender and User Behavior Class for Screen Time and Data Usage.

```{r}
mobile_usage |>
  group_by(behavior_classF, gender) |>
  summarize(across(.cols = c(screen_on_time_hours_day, 
                             data_usage_mb_day),
                   .fns = list("mean" = mean, 
                               "median" = median, 
                               "sd" = sd,
                               "min" = min,
                               "max" = max),
                   .names = "{.fn}_{.col}"))
```

### Plots

Plot 1: Side-by-side barplot 
```{r}
g <- ggplot(data = mobile_usage)
g + geom_bar(aes(x = behavior_classF, fill = gender), 
             position = "dodge", 
             color = "black", 
             alpha = 0.6) +
  labs(x = "User Behavior Class", 
       y = "Number of Users",
       title = "Number of Users in Each User Behavior Class by Gender",
       fill = "Gender") +
  ggeasy::easy_center_title() +
  scale_fill_manual(values = c("lightpink",
                               "lightblue")) +
  facet_wrap(~ operating_systemF)
```

Plot 2: Boxplot
```{r}
g + geom_boxplot(aes(x = behavior_classF, y = screen_on_time_hours_day, fill = gender)) +
  labs(x = "User Behavior Class", 
       y = "Screen Time (hours per day)",
       title = "Screen Time by User Behavior Class",
       fill = "Gender") +
  ggeasy::easy_center_title() +
  scale_fill_manual(values = c("lightpink",
                               "lightblue"))
```

Plot 3: Scatterplot
```{r}
g + geom_point(aes(x = number_of_apps_installed, 
                   y = screen_on_time_hours_day, 
                   color = operating_systemF)) +
  labs(x = "Number of Apps Installed", 
       y = "Screen Time (hours per day)",
       title = "Screen Time by Number of Apps Installed on Mobile Device",
       color = "Operating System") +
  ggeasy::easy_center_title() +
  scale_color_manual(values = c("#FFFF00",
                                "#FF00FF")) +
  theme_dark()
```

Plot 4: Correlation Matrix Plot
```{r}
library(GGally)

df_corr <- mobile_usage |>
  select(where(is.numeric)) |>
  rename("App_Usage" = app_usage_time_min_day,
         "Screen Time" = screen_on_time_hours_day,
         "Battery Drain" = battery_drain_m_ah_day,
         "Number of Apps" = number_of_apps_installed,
         "Data Usage" = data_usage_mb_day,
         "Age" = age)

ggcorr(df_corr, 
       nbreaks = 6,
       label = TRUE,
       palette = "BuPu", 
       size = 3,          # adjusting variable names sizes
       hjust = 0.65) +    # adjusting position of variable names
  labs(title = "Correlation Matrix of all Numeric Variables") +
  ggeasy::easy_center_title()
```


Plot 5: Half-violin Half-dot plot
```{r}
library(see)

g + geom_violindot(aes(x = behavior_classF,
                       y = screen_on_time_hours_day,
                       fill = behavior_classF), 
                   fill_dots = "black") +
  theme_modern() +
  scale_fill_material_d() +
  labs(x = "User Behavior Class", 
       y = "Screen Time (hours per day)",
       title = "Screen Time by User Behavior Class",
       fill = "User Behavior Class") +
  ggeasy::easy_center_title()
```


Plot 6: 




Plot : Cross between Scatter and 2D Density Plot
```{r}
library(ggpointdensity)
library(viridis)

g + geom_pointdensity(aes(x = age, y = number_of_apps_installed)) +
  scale_color_viridis()
```

```{r}
g + geom_point(aes(x = screen_on_time_hours_day, 
                   y = battery_drain_m_ah_day, 
                   size = data_usage_mb_day))
```






